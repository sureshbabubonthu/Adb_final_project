generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fieldReference", "extendedWhereUnique"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  password String
  email    String    @unique
  address  String?
  role     Role      @default(CUSTOMER)
  orders   Order[]
  payments Payment[]

  @@map("user")
}

model Product {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  barcodeId   String?
  slug        String         @unique
  description String
  image       String
  quantity    Int
  price       Float
  category    String[]
  orders      ProductOrder[]

  @@map("product")
}

model Order {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime       @default(now())
  customerName  String
  customerPhone String
  status        OrderStatus
  products      ProductOrder[]
  payment       Payment?
  pickupTime    DateTime?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @db.ObjectId

  @@map("order")
}

model Payment {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime      @default(now())
  amount        Float
  paymentMethod PaymentMethod
  cardNumber    Int?
  address       String?

  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orderId String @unique @db.ObjectId
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  String @db.ObjectId
}

model ProductOrder {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  quantity Int
  amount   Float

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orderId   String  @db.ObjectId

  @@map("product_order")
}

enum PaymentMethod {
  CREDIT_CARD
  DEBIT_CARD
  CASH
}

enum OrderStatus {
  PENDING
  DELIVERED
  READY
  PREPARING
  COMPLETED
  CANCELLED
}

enum Role {
  ADMIN
  CUSTOMER
}
